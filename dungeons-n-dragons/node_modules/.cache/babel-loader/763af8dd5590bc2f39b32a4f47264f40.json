{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kyleg\\\\OneDrive\\\\Documents\\\\Coding Boot Camp\\\\Homework\\\\Dungeons-DragonsOnlineGameManager\\\\dungeons-n-dragons\\\\src\\\\pages\\\\DmGamePage.js\";\nimport React, { useRef, useState } from \"react\";\n\nfunction RenderDungeon() {\n  const [royalDecrees, setRoyalDecrees] = useState([]);\n  const decreeRef = useRef();\n\n  function capitalize(word) {\n    word = word.split(\"\");\n    word[0] = word[0].toUpperCase();\n    return word.join(\"\");\n  }\n\n  function submitDecree(e) {\n    e.preventDefault();\n    const decreeTemp = decreeRef.current.value.toLowerCase();\n    const decreeArray = decreeTemp.split(\" \");\n\n    switch (decreeArray[0]) {\n      case \"roll\":\n        const dice = decreeArray[1].split(\"d\");\n        const numOfDice = dice[0];\n        const numOfSides = dice[1];\n        let dieRollArray = [];\n        let sum = 0;\n        const rollRam = [];\n\n        for (let i = numOfDice; i--; i > 0) {\n          var random = Math.round(Math.random() * numOfSides - 1) + 1;\n          rollRam.push(random);\n          dieRollArray.push(`d${numOfSides}: ${random}`);\n          sum += parseInt(random);\n        }\n\n        if (decreeArray[2] === \"drop\") {\n          switch (decreeArray[3]) {\n            case \"lowest\":\n              let lowest = sum;\n\n              for (let i = 0; i < rollRam.length; i++) {\n                if (rollRam[i] < lowest) {\n                  lowest = rollRam[i];\n                }\n              }\n\n              break;\n\n            default:\n          }\n        }\n\n        dieRollArray.push(`sum: ${sum}`);\n        const value = dieRollArray;\n        setRoyalDecrees([...royalDecrees, {\n          \"text\": decreeRef.current.value,\n          \"value\": value\n        }]);\n        break;\n\n      case \"banana\":\n        var name = decreeArray[1];\n        name = capitalize(name);\n        setRoyalDecrees([...royalDecrees, {\n          \"text\": `${name} is bananas`\n        }]);\n        break;\n\n      default:\n        setRoyalDecrees([...royalDecrees, {\n          \"text\": \"Not a valid decree.\"\n        }]);\n    }\n\n    decreeRef.current.value = \"\";\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, royalDecrees.map((decree, index) => {\n    if (index >= royalDecrees.length - 5) return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 31\n      }\n    }, decree.text), decree.value ? decree.value.map(value => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 41\n        }\n      }, value);\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 36\n      }\n    }));else return null;\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitDecree,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"DecreeBox\",\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }\n  }, \"Enter thy decree\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"DecreeBox\",\n    ref: decreeRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 16\n    }\n  })));\n}\n\nexport default RenderDungeon;","map":{"version":3,"sources":["C:/Users/kyleg/OneDrive/Documents/Coding Boot Camp/Homework/Dungeons-DragonsOnlineGameManager/dungeons-n-dragons/src/pages/DmGamePage.js"],"names":["React","useRef","useState","RenderDungeon","royalDecrees","setRoyalDecrees","decreeRef","capitalize","word","split","toUpperCase","join","submitDecree","e","preventDefault","decreeTemp","current","value","toLowerCase","decreeArray","dice","numOfDice","numOfSides","dieRollArray","sum","rollRam","i","random","Math","round","push","parseInt","lowest","length","name","map","decree","index","text"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from \"react\";\r\n\r\nfunction RenderDungeon(){\r\n     const [royalDecrees, setRoyalDecrees] = useState([]);\r\n     const decreeRef = useRef();\r\n     function capitalize(word){\r\n          word = word.split(\"\");\r\n          word[0] = word[0].toUpperCase();\r\n          return word.join(\"\");\r\n     }\r\n     function submitDecree(e){\r\n          e.preventDefault();\r\n          const decreeTemp = decreeRef.current.value.toLowerCase();\r\n          const decreeArray = decreeTemp.split(\" \");\r\n          switch(decreeArray[0]){\r\n               case\"roll\":\r\n                    const dice = decreeArray[1].split(\"d\");\r\n                    const numOfDice = dice[0]\r\n                    const numOfSides = dice[1];\r\n                    let dieRollArray=[];\r\n                    let sum=0;\r\n                    const rollRam = [];\r\n                    for(let i = numOfDice; i--; i > 0)\r\n                    {\r\n                         var random = Math.round(Math.random()*numOfSides-1)+1;\r\n                         rollRam.push(random);\r\n                         dieRollArray.push(`d${numOfSides}: ${random}`);\r\n                         sum+=parseInt(random);\r\n                    }\r\n                    if(decreeArray[2] === \"drop\"){\r\n                         switch(decreeArray[3]){\r\n                              case \"lowest\":\r\n                                   let lowest = sum;\r\n                                   for(let i = 0; i < rollRam.length; i++){\r\n                                        if(rollRam[i] < lowest){\r\n                                             lowest = rollRam[i];\r\n                                        }\r\n                                   }\r\n                                   break;\r\n                              default:\r\n                              }\r\n                    }\r\n                    dieRollArray.push(`sum: ${sum}`);\r\n                    const value = dieRollArray;\r\n                    setRoyalDecrees([...royalDecrees,\r\n                         {\r\n                              \"text\": decreeRef.current.value,\r\n                              \"value\":value\r\n                         }\r\n                    ])\r\n                    break;\r\n               case\"banana\":\r\n                    var name = decreeArray[1];\r\n                    name = capitalize(name);\r\n                    setRoyalDecrees([...royalDecrees,\r\n                         {\r\n                              \"text\":`${name} is bananas`\r\n                         }\r\n                    ])\r\n                    break;\r\n               default: \r\n                    setRoyalDecrees([...royalDecrees,\r\n                         {\r\n                              \"text\": \"Not a valid decree.\",\r\n                         }\r\n                    ])\r\n          }\r\n          decreeRef.current.value = \"\";\r\n     };\r\n     return(\r\n          <div>\r\n               {royalDecrees.map((decree, index)=>{\r\n                    if(index >= royalDecrees.length-5)\r\n                    return(\r\n                         <div key={index}>\r\n                              <p>{decree.text}</p>\r\n                              {decree.value ? decree.value.map((value)=>{\r\n                                   return(\r\n                                        <div>\r\n                                             {value}\r\n                                        </div>\r\n                                   );\r\n                              }) : <p></p>}\r\n                              \r\n                         </div>\r\n                    )\r\n                    else return null;\r\n               })}\r\n          <form onSubmit={submitDecree}>\r\n               <label htmlFor=\"DecreeBox\" className=\"\">Enter thy decree</label>\r\n               <input name=\"DecreeBox\" ref={decreeRef} />\r\n          </form>\r\n          </div>\r\n     );\r\n}\r\n\r\nexport default RenderDungeon;"]},"metadata":{},"sourceType":"module"}