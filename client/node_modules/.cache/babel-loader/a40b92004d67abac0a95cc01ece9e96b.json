{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kyleg\\\\OneDrive\\\\Documents\\\\Coding Boot Camp\\\\Homework\\\\Dungeons-DragonsOnlineGameManager\\\\dungeons-n-dragons\\\\src\\\\pages\\\\DmGamePage.js\";\nimport React, { useRef, useState } from \"react\";\n\nfunction RenderDungeon() {\n  const [royalDecrees, setRoyalDecrees] = useState([]);\n  const decreeRef = useRef();\n\n  function capitalize(word) {\n    word = word.split(\"\");\n    word[0] = word[0].toUpperCase();\n    return word.join(\"\");\n  }\n\n  function submitDecree(e) {\n    e.preventDefault();\n    const decreeTemp = decreeRef.current.value.toLowerCase();\n    const decreeArray = decreeTemp.split(\" \");\n\n    switch (decreeArray[0]) {\n      case \"roll\":\n        const dice = decreeArray[1].split(\"d\");\n        const numOfDice = dice[0];\n        const numOfSides = dice[1];\n        let dieRollArray = [];\n        let sum = 0;\n        const rollRam = [];\n\n        for (let i = numOfDice; i--; i > 0) {\n          var random = Math.floor(Math.random() * numOfSides + 1);\n          rollRam.push(random);\n          dieRollArray.push(`d${numOfSides}: ${random}`);\n          sum += parseInt(random);\n        }\n\n        if (decreeArray[2] === \"drop\") {\n          let dropped;\n\n          switch (decreeArray[3]) {\n            case \"lowest\":\n              let lowest = sum;\n\n              for (let i = 0; i < rollRam.length; i++) {\n                if (rollRam[i] < lowest) {\n                  lowest = rollRam[i];\n                }\n              }\n\n              console.log(lowest, dieRollArray);\n              dropped = dieRollArray.indexOf(`d${numOfSides}: ${lowest}`);\n              sum = sum - lowest;\n              break;\n\n            case \"highest\":\n              let highest = 0;\n\n              for (let i = 0; i < rollRam.length; i++) {\n                if (rollRam[i] > highest) {\n                  highest = rollRam[i];\n                }\n              }\n\n              dropped = dieRollArray.indexOf(`d${numOfSides}: ${highest}`);\n              sum = sum - highest;\n              break;\n\n            default:\n              break;\n          }\n\n          dieRollArray[dropped] = `${dieRollArray[dropped]} (dropped)`;\n        }\n\n        dieRollArray.push(`sum: ${sum}`);\n        const value = dieRollArray;\n        setRoyalDecrees([...royalDecrees, {\n          \"text\": decreeRef.current.value,\n          \"value\": value\n        }]);\n        break;\n\n      case \"abucus\":\n      case \"calculate\":\n        const calculus = decreeArray[1].split(\"\");\n        break;\n\n      case \"banana\":\n        var name = decreeArray[1];\n        name = capitalize(name);\n        setRoyalDecrees([...royalDecrees, {\n          \"text\": `${name} is bananas!`\n        }]);\n        break;\n\n      case \"troglodyte\":\n        var name = decreeArray[1];\n        name = capitalize(name);\n        setRoyalDecrees([...royalDecrees, {\n          \"text\": `${name} is an uneducated troglodyte.`\n        }]);\n        break;\n\n      default:\n        setRoyalDecrees([...royalDecrees, {\n          \"text\": \"Not a valid decree.\"\n        }]);\n    } // saveData(royalDecrees[royalDecrees.length]);\n\n\n    decreeRef.current.value = \"\";\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scroll-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"scroll-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }\n  }, \"Decree Scroll\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"decree-scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 16\n    }\n  }, royalDecrees.map((decree, index) => {\n    if (index >= royalDecrees.length - 5) return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-align-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 36\n      }\n    }, decree.text), decree.value ? decree.value.map(value => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 46\n        }\n      }, value);\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 41\n      }\n    }));else return null;\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitDecree,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"col-12 decree-box\",\n    name: \"DecreeBox\",\n    ref: decreeRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 16\n    }\n  })));\n}\n\nexport default RenderDungeon;","map":{"version":3,"sources":["C:/Users/kyleg/OneDrive/Documents/Coding Boot Camp/Homework/Dungeons-DragonsOnlineGameManager/dungeons-n-dragons/src/pages/DmGamePage.js"],"names":["React","useRef","useState","RenderDungeon","royalDecrees","setRoyalDecrees","decreeRef","capitalize","word","split","toUpperCase","join","submitDecree","e","preventDefault","decreeTemp","current","value","toLowerCase","decreeArray","dice","numOfDice","numOfSides","dieRollArray","sum","rollRam","i","random","Math","floor","push","parseInt","dropped","lowest","length","console","log","indexOf","highest","calculus","name","map","decree","index","text"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from \"react\";\r\n\r\nfunction RenderDungeon(){\r\n     const [royalDecrees, setRoyalDecrees] = useState([]);\r\n     const decreeRef = useRef();\r\n     function capitalize(word){\r\n          word = word.split(\"\");\r\n          word[0] = word[0].toUpperCase();\r\n          return word.join(\"\");\r\n     }\r\n     function submitDecree(e){\r\n          e.preventDefault();\r\n          const decreeTemp = decreeRef.current.value.toLowerCase();\r\n          const decreeArray = decreeTemp.split(\" \");\r\n          switch(decreeArray[0]){\r\n               case\"roll\":\r\n                    const dice = decreeArray[1].split(\"d\");\r\n                    const numOfDice = dice[0]\r\n                    const numOfSides = dice[1];\r\n                    let dieRollArray=[];\r\n                    let sum=0;\r\n                    const rollRam = [];\r\n                    for(let i = numOfDice; i--; i > 0)\r\n                    {\r\n                         var random = Math.floor((Math.random() * numOfSides) + 1);\r\n                         rollRam.push(random);\r\n                         dieRollArray.push(`d${numOfSides}: ${random}`);\r\n                         sum+=parseInt(random);\r\n                    }\r\n                    if(decreeArray[2] === \"drop\"){\r\n                         let dropped;\r\n                         switch(decreeArray[3]){\r\n                              case \"lowest\":\r\n                                   let lowest = sum;\r\n                                   for(let i = 0; i < rollRam.length; i++){\r\n                                        if(rollRam[i] < lowest){\r\n                                             lowest = rollRam[i];\r\n                                        }\r\n                                   }\r\n                                   console.log(lowest, dieRollArray);\r\n                                   dropped = dieRollArray.indexOf(`d${numOfSides}: ${lowest}`);\r\n                                   sum = sum - lowest;\r\n                                   break;\r\n                              case \"highest\":\r\n                                   let highest = 0;\r\n                                   for(let i = 0; i < rollRam.length; i++){\r\n                                        if(rollRam[i] > highest){\r\n                                             highest = rollRam[i];\r\n                                        }\r\n                                   }\r\n                                   dropped = dieRollArray.indexOf(`d${numOfSides}: ${highest}`);\r\n                                   sum = sum - highest;\r\n                                   break;\r\n                              default:\r\n                                   break;\r\n                         }\r\n                         dieRollArray[dropped] = `${dieRollArray[dropped]} (dropped)`;\r\n                    }\r\n                    dieRollArray.push(`sum: ${sum}`);\r\n                    const value = dieRollArray;\r\n                    setRoyalDecrees([...royalDecrees,\r\n                         {\r\n                              \"text\": decreeRef.current.value,\r\n                              \"value\":value\r\n                         }\r\n                    ])\r\n                    break;\r\n               case\"abucus\":\r\n               case\"calculate\":\r\n                    const calculus = decreeArray[1].split(\"\");\r\n\r\n                    break;\r\n               case\"banana\":\r\n                    var name = decreeArray[1];\r\n                    name = capitalize(name);\r\n                    setRoyalDecrees([...royalDecrees,\r\n                         {\r\n                              \"text\":`${name} is bananas!`\r\n                         }\r\n                    ])\r\n                    break;\r\n               case\"troglodyte\":\r\n                    var name = decreeArray[1];\r\n                    name = capitalize(name);\r\n                    setRoyalDecrees([...royalDecrees,\r\n                         {\r\n                              \"text\":`${name} is an uneducated troglodyte.`\r\n                         }\r\n                    ])\r\n                    break;\r\n               default: \r\n                    setRoyalDecrees([...royalDecrees,\r\n                         {\r\n                              \"text\": \"Not a valid decree.\",\r\n                         }\r\n                    ])\r\n          }\r\n          // saveData(royalDecrees[royalDecrees.length]);\r\n          decreeRef.current.value = \"\";\r\n     };\r\n     return(\r\n          <div className=\"scroll-container\">\r\n               <h1 className=\"scroll-heading\">Decree Scroll</h1>\r\n               <div className=\"decree-scroll\">\r\n                    {royalDecrees.map((decree, index)=>{\r\n                    if(index >= royalDecrees.length-5)\r\n                         return(\r\n                              <div key={index}>\r\n                                   <p className=\"text-align-left\">{decree.text}</p>\r\n                                   {decree.value ? decree.value.map((value)=>{\r\n                                        return(\r\n                                             <div>\r\n                                                  {value}\r\n                                             </div>\r\n                                        );\r\n                                   }) : <p></p>}\r\n                              </div>\r\n                         )\r\n                         else return null;\r\n                    })}\r\n               </div>\r\n          <form onSubmit={submitDecree}>\r\n               <input className=\"col-12 decree-box\" name=\"DecreeBox\" ref={decreeRef} />\r\n          </form>\r\n          </div>\r\n     );\r\n}\r\n\r\nexport default RenderDungeon;"]},"metadata":{},"sourceType":"module"}