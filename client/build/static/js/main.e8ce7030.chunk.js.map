{"version":3,"sources":["pages/Player/CharGamePage.js","pages/playerContainer.js","utils/api.js","pages/DmGamePage.js","pages/game.js","Components/loginButton.js","Components/logoutButton.js","Components/Header.js","App.js","serviceWorker.js","index.js"],"names":["RenderAdventure","initiativeRef","useRef","className","src","alt","onSubmit","e","preventDefault","current","value","toLowerCase","split","name","ref","renderPlayer","loginData","axios","post","userData","put","userId","screenName","book","id","RenderDungeon","stfNthngs","useState","royalDecrees","setRoyalDecrees","party","setParty","NPCs","setNPCs","capIsSpecial","setCapSpecial","decreeRef","capitalize","word","i","length","cap","wordFragment","wordStore","toUpperCase","join","push","spellFailed","error","errorMessage","randomEvents","randomEvent","Math","round","random","message","decreefailed","map","decree","index","key","text","orignalDecree","decreeArray","title","Book","API","then","res","console","log","catch","err","saveBook","dice","numOfDice","numOfSides","dieRollArray","sum","rollRam","floor","parseInt","dropped","lowest","indexOf","highest","newPlayer","includes","newNPC","exitPlayer","splice","j","checkForPunc","result","equation","firstNum","calculus","secNum","findOperator","isNaN","subject","dataType","char","health","str","dex","int","wis","cha","con","Game","screenNameBox","isDM","userObj","api","htmlFor","LoginButton","loginWithRedirect","useAuth0","style","height","onClick","logout","returnTo","window","location","origin","Header","children","App","user","isAuthenticated","account","setAccount","username","logIn","useEffect","nickname","sub","data","JSON","stringify","Boolean","hostname","match","ReactDOM","render","StrictMode","domain","clientId","redirectUri","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8ce7030.chunk.js","sourcesContent":["import React, {useRef} from \"react\";\r\n\r\nfunction RenderAdventure(){\r\n     const initiativeRef = useRef();\r\n     function capitalize(word){\r\n          word = word.split(\"\");\r\n          word[0] = word[0].toUpperCase();\r\n          return word.join(\"\");\r\n     }\r\n     function initiative(e){\r\n          e.preventDefault();\r\n          const initiativeAction = initiativeRef.current.value.toLowerCase();\r\n          const actionArray = initiativeAction.split(\" \");\r\n          switch(actionArray[0]){\r\n               case\"pick up\":\r\n               \r\n                    break;\r\n               default:\r\n                    break;\r\n          }\r\n     }\r\n     return(\r\n          <div className=\"container\">\r\n               <div className=\"row\">\r\n                    <img className=\"col-3\" src=\"https://i.pinimg.com/736x/0e/d0/7d/0ed07dfab7dfeae5262bf0ba400b0ff6--dnd-characters-fantasy-characters.jpg\" alt=\"Character art\"/>\r\n                    <form className=\"col-2\" onSubmit={initiative} >\r\n                         <input name=\"InitiativeBox\" ref={initiativeRef} />\r\n                    </form>\r\n               </div>\r\n          </div>\r\n     );\r\n}\r\n\r\nexport default RenderAdventure;","import React, {useRef} from \"react\";\r\nimport RenderAdventure from \"./Player/CharGamePage\";\r\n\r\nfunction renderPlayer(){\r\n     return(\r\n          <RenderAdventure />\r\n     );\r\n}\r\n\r\nexport default renderPlayer;","import axios from \"axios\";\r\n\r\nexport default{\r\n     getUser: function(loginData){\r\n          return axios.post(`/api/dnd/users/logIn`, loginData);\r\n     },\r\n\r\n     newUser: function(userData){\r\n          return axios.put(`/api/dnd/users/new-user`, userData);\r\n     },\r\n\r\n     setScreenName: function(userId, screenName){\r\n          return axios.put(`/api/dnd/users/${userId}`, screenName);\r\n     },\r\n\r\n     saveBook: function(book){\r\n          return axios.post(`/api/dnd/books/save`, book);\r\n     },\r\n\r\n     newBook: function(book){\r\n          return axios.put(`/api/dnd/books/save`, book);\r\n     },\r\n\r\n     getBook: function(title){\r\n          return axios.post(`/api/dnd/books/book:${title}`);\r\n     },\r\n\r\n     getBooks: function(id){\r\n          return axios.post(`/api/dnd/books-by-user/:${id}`);\r\n     }\r\n}","import React, {useRef, useState} from \"react\";\r\nimport API from \"../utils/api\";\r\n\r\nfunction RenderDungeon(stfNthngs){\r\n     const [royalDecrees, setRoyalDecrees] = useState([]);\r\n     const [party, setParty] = useState([{\"name\":\"tiffany\"},{\"name\":\"kurt\"},{\"name\":\"ass\"},{\"name\":\"assballs69\"},{\"name\":\"heathcliff\"},{\"name\":\"ri'luaneth\"}]);\r\n     const [NPCs, setNPCs] = useState([{\"name\":\"reginald\",\"isHostile\":false},{\"name\":\"general_zod\",\"isHostile\":true}]);\r\n     const [capIsSpecial, setCapSpecial] = useState([{\"name\":\"ri'luaneth\",\"cap\":\"Ri'Luaneth\"}]);\r\n     const decreeRef = useRef();\r\n\r\n     function capitalize(word){\r\n          for(let i = 0; i < capIsSpecial.length; i++){\r\n               if(capIsSpecial[i].name === word){\r\n                    return capIsSpecial[i].cap;\r\n               }\r\n          }\r\n          word = word.split(\"_\");\r\n          let wordStore=[];\r\n          let wordFragment;\r\n          for(let i = 0; i < word.length; i++){\r\n               wordFragment = word[i].split(\"\");\r\n               wordFragment[0] = wordFragment[0].toUpperCase();\r\n               wordFragment = wordFragment.join(\"\");\r\n               wordStore.push(wordFragment);\r\n          }\r\n          return wordStore.join(\"_\");\r\n     }\r\n\r\n     // function loadBook(title){\r\n     //      API.getBook(title);\r\n     // }\r\n\r\n     function getBooks(){\r\n          API.getBooks(stfNthngs.userId).then(res=>{\r\n               console.log(res);\r\n          }).catch(err=>{\r\n               console.log(err);\r\n          });\r\n     }\r\n\r\n     function saveBook(title){\r\n          const Book = {id:stfNthngs.userId, title:title, party:party, NPCs:NPCs, capIsSpecial:capIsSpecial, royalDecrees:royalDecrees};\r\n          API.saveBook(Book).then(res=>{\r\n               console.log(res);\r\n          }).catch(err=>{\r\n               console.log(err);\r\n               API.newBook(Book).then(res=>{\r\n                    console.log(res);\r\n               }).catch(err=>{\r\n                    console.log(err);\r\n               });\r\n          });\r\n     }\r\n     \r\n     function spellFailed(error){\r\n          const randomEvents = [\"You've just turned a player into a toad.\",\"Is... Is that a tiny rain cloud floating over your head...?\",\"Oh.... Now your hair is on fire...\",\"Are... Are you... Translucent...?\",\"Aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaand now it's raining...\"];\r\n          const length = randomEvents.length;\r\n          const randomEvent = (Math.round(Math.random()*length)-1);\r\n          const message = `You may need more practice. Please consult the spell book if you're having trouble.`;\r\n          let errorMessage;\r\n          if(error){\r\n               errorMessage = `${error}${message}`;\r\n          } else {\r\n               errorMessage = message;\r\n          }\r\n          const decreefailed = `${randomEvents[randomEvent]} ${errorMessage}`;\r\n          setRoyalDecrees([...royalDecrees,\r\n               {\r\n                    \"text\":decreefailed\r\n               }]);\r\n     }\r\n     \r\n     function submitDecree(e){\r\n          e.preventDefault();\r\n          const orignalDecree = decreeRef.current.value.split(\" \");\r\n          const decreeTemp = decreeRef.current.value.toLowerCase();\r\n          const decreeArray = decreeTemp.split(\" \");\r\n          switch(decreeArray[0]){\r\n               case\"save\":\r\n                    let errorMessage = `To save the game, please recite \"save game [insert title]\". All spaces in the title must be represented with underscores. `;\r\n                    if(decreeArray[1] === \"game\" || decreeArray[1] === \"game\"){\r\n                         if(decreeArray[2]){\r\n                              saveBook(decreeArray[2]);\r\n                         } else {\r\n                              spellFailed(errorMessage);\r\n                         }\r\n                    } else {\r\n                         spellFailed(errorMessage);\r\n                    }\r\n                    break;\r\n               // case\"load\":\r\n               //      let errorMessage = `To load a game, please recite \"save game [insert title]\". All spaces in the title must be represented with underscores. `;\r\n               //      if(decreeArray[1] === \"game\" || decreeArray[1] === \"game\"){\r\n               //      if(decreeArray[2]){\r\n               //           loadBook(decreeArray[2]);\r\n               //      } else {\r\n               //           spellFailed(errorMessage);\r\n               //      }\r\n               // } else {\r\n               //      spellFailed(errorMessage);\r\n               // }\r\n               //      break;\r\n               case\"roll\":\r\n                    if(decreeArray[1]){\r\n                         const dice = decreeArray[1].split(\"d\");\r\n                         const numOfDice = dice[0]\r\n                         const numOfSides = dice[1];\r\n                         let dieRollArray=[];\r\n                         let sum=0;\r\n                         const rollRam = [];\r\n                         for(let i = numOfDice; i--; i > 0)\r\n                         {\r\n                              var random = Math.floor((Math.random() * numOfSides) + 1);\r\n                              rollRam.push(random);\r\n                              dieRollArray.push(`d${numOfSides}: ${random}`);\r\n                              sum+=parseInt(random);\r\n                         }\r\n                         if(decreeArray[2] === \"drop\"){\r\n                              let dropped;\r\n                              switch(decreeArray[3]){\r\n                                   case \"lowest\":\r\n                                        let lowest = sum;\r\n                                        for(let i = 0; i < rollRam.length; i++){\r\n                                             if(rollRam[i] < lowest){\r\n                                                  lowest = rollRam[i];\r\n                                             }\r\n                                        }\r\n                                        console.log(lowest, dieRollArray);\r\n                                        dropped = dieRollArray.indexOf(`d${numOfSides}: ${lowest}`);\r\n                                        sum = sum - lowest;\r\n                                        break;\r\n                                   case \"highest\":\r\n                                        let highest = 0;\r\n                                        for(let i = 0; i < rollRam.length; i++){\r\n                                             if(rollRam[i] > highest){\r\n                                                  highest = rollRam[i];\r\n                                             }\r\n                                        }\r\n                                        dropped = dieRollArray.indexOf(`d${numOfSides}: ${highest}`);\r\n                                        sum = sum - highest;\r\n                                        break;\r\n                                   default:\r\n                                        break;\r\n                         }\r\n                         dieRollArray[dropped] = `${dieRollArray[dropped]} (dropped)`;\r\n                         }\r\n                         dieRollArray.push(`sum: ${sum}`);\r\n                         const value = dieRollArray;\r\n                         setRoyalDecrees([...royalDecrees,\r\n                              {\r\n                                   \"text\": decreeRef.current.value,\r\n                                   \"value\":value\r\n                              }\r\n                         ]);\r\n                    } else {\r\n                         spellFailed(`Please recite the number of dice and the number of sides with the following incantation: \"roll (# of dice)d(# of sides)\". Do not use any spaces in between the numbers and the letter d.`);\r\n                    }\r\n                    break;\r\n               case\"add\":\r\n                    switch(decreeArray[1]){\r\n                         case\"player\":\r\n                              switch(decreeArray[2]){\r\n                                   case\"character\":\r\n                                   case\"character:\":\r\n                                        if(decreeArray[3]){\r\n                                             const newPlayer = decreeArray[3];\r\n                                             if(party.includes(newPlayer)){\r\n                                                  const value = `${capitalize(newPlayer)} is already a member of your party.`;\r\n                                                  setRoyalDecrees([...royalDecrees,\r\n                                                       {\r\n                                                            \"text\":value\r\n                                                       }\r\n                                                  ]);\r\n                                             } else {\r\n                                                  switch(decreeArray[4]){\r\n                                                       case\"special\":\r\n                                                            switch(decreeArray[5]){\r\n                                                                 case\"capitalize:\":\r\n                                                                 case\"capital:\":\r\n                                                                 case\"cap:\":\r\n                                                                 case\"cap\":\r\n                                                                 case\"capital\":\r\n                                                                 case\"capitalize\":\r\n                                                                 case\"capitalization\":\r\n                                                                 case\"capitalization:\":\r\n                                                                      setCapSpecial({\"cap\":orignalDecree[3],\"name\":decreeArray[3]});\r\n                                                                 default:\r\n                                                            }\r\n                                                       default:\r\n                                                  }\r\n                                                  const value = `New player character: ${capitalize(newPlayer)}`;\r\n                                                  setParty([...party,\r\n                                                       {\r\n                                                            \"name\":newPlayer\r\n                                                       }\r\n                                                  ]);\r\n                                                  setRoyalDecrees([...royalDecrees,\r\n                                                       {\r\n                                                            \"text\":value\r\n                                                       }\r\n                                                  ]);\r\n                                             }\r\n                                        } else {\r\n                                             spellFailed(\"Please recite a player characters name when next you attempt this spell. \");\r\n                                        }\r\n                                        break;\r\n                                   default:\r\n                                        spellFailed();\r\n                              }\r\n                              break;\r\n                         case\"npc\":\r\n                         case\"npc:\":\r\n                              const newNPC = decreeArray[3];\r\n                              if(NPCs.includes(newNPC)){\r\n                                   const value = `${capitalize(newNPC)} is already a member of a non player character.`;\r\n                                   setRoyalDecrees([...royalDecrees,\r\n                                        {\r\n                                             \"text\":value\r\n                                        }\r\n                                   ]);\r\n                              }\r\n                              const value = `New npc: ${newNPC}`;\r\n                              setNPCs([...NPCs,\r\n                                   {\r\n                                        \"name\":capitalize(newNPC)\r\n                                   }\r\n                              ]);\r\n                              setRoyalDecrees([...royalDecrees,\r\n                                   {\r\n                                        \"text\":value\r\n                                   }\r\n                              ]);\r\n                              break;\r\n                         default:\r\n                              spellFailed();\r\n                    }\r\n                    break;\r\n               case\"remove\":\r\n                    switch(decreeArray[1]){\r\n                         case\"player\":\r\n                              switch(decreeArray[2]){\r\n                                   case\"character\":\r\n                                   case\"character:\":\r\n                                        const exitPlayer = decreeArray[3];\r\n                                        if(party.includes(exitPlayer)){\r\n                                             const index = party.indexOf(party);\r\n                                             party.splice(index, 1);\r\n                                             const value = `${capitalize(exitPlayer)} has left the party.`;\r\n                                             setRoyalDecrees([...royalDecrees,\r\n                                                  {\r\n                                                       \"text\":value\r\n                                                  }\r\n                                             ]);\r\n                                        } else {\r\n                                             const value = `${capitalize(exitPlayer)} is not a member of the party`;\r\n                                             setRoyalDecrees([...royalDecrees,\r\n                                                  {\r\n                                                       \"text\":value\r\n                                                  }\r\n                                             ]);\r\n                                        }\r\n                                        break;\r\n                                   default:\r\n                                        spellFailed();\r\n                              }\r\n                              break;\r\n                         case\"npc\":\r\n                         case\"npc:\":\r\n                              let newNPC = decreeArray[2];\r\n                              if(NPCs.includes(newNPC)){\r\n                                   const value = `${capitalize(newNPC)} is already a member of a non player character.`;\r\n                                   setRoyalDecrees([...royalDecrees,\r\n                                        {\r\n                                             \"text\":value\r\n                                        }\r\n                                   ]);\r\n                              }\r\n                              const value = `New npc: ${newNPC}`;\r\n                              setNPCs([...NPCs,\r\n                                   {\r\n                                        \"name\":capitalize(newNPC)\r\n                                   }\r\n                              ]);\r\n                              setRoyalDecrees([...royalDecrees,\r\n                                   {\r\n                                        \"text\":value\r\n                                   }\r\n                              ]);\r\n                              break;\r\n                         default:\r\n                              spellFailed();\r\n                    }\r\n                    break;\r\n               case\"party\":\r\n                    switch(decreeArray[1]){\r\n                         case\"members\":\r\n                         case\"members:\":\r\n                              let value=`Party members: `;\r\n                              for(let i = 0; i < party.length; i++){\r\n                                   if(i === party.length-1){\r\n                                        value+=` and ${capitalize(party[i].name)}.`\r\n                                   } else {\r\n                                        value+=`${capitalize(party[i].name)}, `;\r\n                                   }\r\n                              }\r\n                              setRoyalDecrees([...royalDecrees,\r\n                                   {\r\n                                        \"text\":value\r\n                                   }\r\n                              ]);\r\n                              break;\r\n                         default:\r\n                              spellFailed();\r\n                    }\r\n                    break;\r\n               case\"display\":\r\n                    switch(decreeArray[1]){\r\n                         case\"games\":\r\n                         case\"games:\":\r\n                              getBooks();\r\n                              break;\r\n                         case\"npc:\":\r\n                         case\"npc\":\r\n                         case\"npcs\":\r\n                         case\"npcs:\":\r\n                              decreeArray[1] = `${decreeArray[1]} `;\r\n                              let value=`${capitalize(decreeArray[1])}`;\r\n                              if(NPCs.length === 2){\r\n                                   value+=`${capitalize(NPCs[0].name)} and ${capitalize(NPCs[1].name)}.`\r\n                              } else{\r\n                                   for(let i = -1; i < NPCs.length; i++){\r\n                                        if(NPCs[i] != null){\r\n                                             if(i === NPCs.length-1){\r\n                                                  value+=` and ${capitalize(NPCs[i].name)}.`\r\n                                                  console.log(NPCs[i]);\r\n                                             } else {\r\n                                                  value+=`${capitalize(NPCs[i].name)}, `;\r\n                                             }\r\n                                        }\r\n                                   }\r\n                              }\r\n                              setRoyalDecrees([...royalDecrees,\r\n                                   {\r\n                                        \"text\":value\r\n                                   }\r\n                              ]);\r\n                              break;\r\n                         case\"flavor\":\r\n                              switch(decreeArray[2]){\r\n                                   case\"text\":\r\n                                   case\"text:\":\r\n                                        let value=\"Flavor: \";\r\n                                        decreeArray[3] = capitalize(decreeArray[3]);\r\n                                        for(let i = 3; i < decreeArray.length; i++){\r\n                                             for(let j = 0; j < party.length; j++){\r\n                                                  switch(decreeArray[i]){\r\n                                                       case party[j]:\r\n                                                            decreeArray[i] = capitalize(decreeArray[i]);\r\n                                                            break;\r\n                                                       default:\r\n                                                            const checkForPunc = decreeArray[i-1].split(\"\");\r\n                                                            if(checkForPunc[checkForPunc.length-1] === \".\" || checkForPunc[checkForPunc.length-1] === \"!\" || checkForPunc[checkForPunc.length-1] === \"?\"){\r\n                                                                 decreeArray[i] = capitalize(decreeArray[i]);\r\n                                                            }\r\n                                                  }\r\n                                             }\r\n                                             value += ` ${decreeArray[i]}`;\r\n                                        }\r\n                                        const checkForPunc = value.split(\"\");\r\n                                        if(checkForPunc[checkForPunc.length-1] !== \".\" && checkForPunc[checkForPunc.length-1] !== \"!\" && checkForPunc[checkForPunc.length-1] !== \"?\" ){\r\n                                             value+=\".\";\r\n                                        }\r\n                                        setRoyalDecrees([...royalDecrees,\r\n                                             {\r\n                                                  \"text\":value\r\n                                             }\r\n                                        ]);\r\n                                        break;\r\n                                   default:\r\n                                        spellFailed();\r\n                              }\r\n                              break;\r\n                         default:\r\n                              spellFailed();\r\n                    }\r\n                    break;\r\n               case\"abucus\":\r\n               case\"abucus:\":\r\n               case\"calculate\":\r\n               case\"calculate:\":\r\n                    var result;\r\n                    var equation;\r\n                    var firstNum;\r\n                    let calculus;\r\n                    var secNum;\r\n                    if(decreeArray[1]){\r\n                         const findOperator = decreeArray[1].split(\"\");\r\n                         for(let i = 0; i<findOperator.length; i++){\r\n                              if(isNaN(findOperator[i])){\r\n                                   calculus = findOperator[i];\r\n                              }\r\n                         }\r\n                         equation = decreeArray[1].split(calculus);\r\n                         firstNum = parseInt(equation[0]);\r\n                         secNum = parseInt(equation[1]);\r\n                    }\r\n                    switch(calculus){\r\n                         case\"+\":\r\n                         case\"plus\":\r\n                              result = parseInt(firstNum+secNum);\r\n                              break;\r\n                         case\"-\":\r\n                         case\"minus\":\r\n                              result = parseInt(firstNum-secNum);\r\n                              break;\r\n                         case\"*\":\r\n                         case\"x\":\r\n                         case\"multiplied by\":\r\n                              result = parseInt(firstNum*secNum);\r\n                              break;\r\n                         default:\r\n                              spellFailed();\r\n                         }\r\n                         if(result){\r\n                              setRoyalDecrees([...royalDecrees,\r\n                                   {\r\n                                        \"text\":result\r\n                                   }\r\n                              ])\r\n                         }\r\n                    break;\r\n               case\"banana\":\r\n                    var name = decreeArray[1];\r\n                    name = capitalize(name);\r\n                    setRoyalDecrees([...royalDecrees,\r\n                         {\r\n                              \"text\":`${name} is bananas!`\r\n                         }\r\n                    ]);\r\n                    break;\r\n               case\"troglodyte\":\r\n                    var name = decreeArray[1];\r\n                    name = capitalize(name);\r\n                    setRoyalDecrees([...royalDecrees,\r\n                         {\r\n                              \"text\":`${name} is an uneducated troglodyte.`\r\n                         }\r\n                    ]);\r\n                    break;\r\n               case\"action\":\r\n               case\"action:\":\r\n                    let subject;\r\n                    for(let i = 0; i < party.length; i++){\r\n                         if(decreeArray[1] === party[i]){\r\n                              subject = party[i];\r\n                         }\r\n                    }\r\n                    if(subject){\r\n                         switch(decreeArray[2]){\r\n                              case\"attack\":\r\n                              case\"attacks\":\r\n                              case\"attacked\":\r\n                                   setRoyalDecrees([...royalDecrees,\r\n                                   {\r\n                                        \"text\":`${capitalize(subject)} attacked ` + \"${capitalize(object)}\"\r\n                                   }]);\r\n                                   break;\r\n\r\n                         }\r\n                    }\r\n                    else{\r\n                         setRoyalDecrees([...royalDecrees,\r\n                         {\r\n                              \"text\": `${capitalize(decreeArray[1])} is not a player`\r\n                         }]);\r\n                    }\r\n                    break;\r\n               case\"set\":\r\n                    let value = decreeArray[3];\r\n                    let dataType;\r\n                    switch(decreeArray[1]){\r\n                         case\"health\":\r\n                         case\"hp\":\r\n                              dataType = \"health\";\r\n                              break;\r\n                         case\"str\":\r\n                         case\"strength\":\r\n                              dataType = \"strength\";\r\n                              break;\r\n                         case\"dex\":\r\n                         case\"dexterity\":\r\n                              dataType = \"dexterity\";\r\n                              break;\r\n                         case\"con\":\r\n                         case\"constitution\":\r\n                              dataType = \"constitution\";\r\n                              break;\r\n                         case\"int\":\r\n                         case\"intelligence\":\r\n                              dataType = \"intelligence\";\r\n                              break;\r\n                         case\"wis\":\r\n                         case\"wisdom\":\r\n                              dataType = \"wisdom\";\r\n                              break;\r\n                         case\"cha\":\r\n                         case\"charisma\":\r\n                              dataType = \"charisma\";\r\n                              break;\r\n                         default:\r\n                              spellFailed(\"The options for set are hp (health), str (strength), dex (dexterity), con (constitution), int (intelligence), wis (wisdom), and cha (charisma)\");\r\n                    }\r\n                    if(value){\r\n                         let char;\r\n                         let index = 0;\r\n                         for(let i = index; i < party.length; i++){\r\n                              if(decreeArray[2] == party[i].name){\r\n                                   console.log(party[i]);\r\n                                   char = decreeArray[2];\r\n                                   index = i;\r\n                              }\r\n                         }\r\n                         if(char){\r\n                              switch(dataType){\r\n                                   case\"health\":\r\n                                        party[index].health = value;\r\n                                        break;\r\n                                   case\"strength\":\r\n                                        party[index].str = value;\r\n                                        break;\r\n                                   case\"dexterity\":\r\n                                        party[index].dex = value;\r\n                                        break;\r\n                                   case\"intelligence\":\r\n                                        party[index].int = value;\r\n                                        break;\r\n                                   case\"wisdon\":\r\n                                        party[index].wis = value;\r\n                                        break;\r\n                                   case\"charisma\":\r\n                                        party[index].cha = value;\r\n                                        break;\r\n                                   default:\r\n                              }\r\n                              setRoyalDecrees([...royalDecrees,\r\n                                   {\r\n                                        \"text\": `${capitalize(char)} ${dataType}: ${value}`\r\n                                   }]);\r\n                         } else {\r\n                              spellFailed(`Please enter a character name next time. ${capitalize(decreeArray[2])} is not a current party member. If you would like to add them, simply type \"add party member: ${capitalize(decreeArray[2])}. `);\r\n                         }\r\n                    } else {\r\n                         spellFailed(`This spell won't work unless you enter a value. `);\r\n                    }\r\n                    break;\r\n               default:\r\n                    let char;\r\n                    let index;\r\n                    for(let i = 0; i < party.length; i++){\r\n                         if(decreeArray[0] == party[i].name){\r\n                              char = true;\r\n                              index = i;\r\n                         }\r\n                    }\r\n                    if(char){\r\n                         switch(decreeArray[1]){\r\n                              case\"stats\":\r\n                              case\"stats:\":\r\n                                   let text = [{text:`${capitalize(decreeArray[0])} stats:`}];\r\n                                   text = [...text, {text : `-Health: ${party[index].health}`}];\r\n                                   text = [...text, {text : `-STR: ${party[index].str}`}];\r\n                                   text = [...text, {text : `-DEX: ${party[index].dex}`}];\r\n                                   text = [...text, {text : `-CON: ${party[index].con}`}];\r\n                                   text = [...text, {text : `-INT: ${party[index].int}`}];\r\n                                   text = [...text, {text : `-WIS: ${party[index].wis}`}];\r\n                                   text = [...text, {text : `-CHA: ${party[index].cha}`}];\r\n                                   setRoyalDecrees([...royalDecrees,\r\n                                        ...text\r\n                                   ]);\r\n                                   break;\r\n                              case\"is\":\r\n                                   switch(decreeArray[2]){\r\n                                        case\"poisoned\":\r\n                                        case\"poisoned.\":\r\n                                             break;\r\n                                        default:\r\n                                             spellFailed();\r\n                                   }\r\n                                   break;\r\n                              case\"has\":\r\n                                   switch(decreeArray[2]){\r\n                                        case\"special\":\r\n                                             switch(decreeArray[3]){\r\n                                                  case\"capitalization\":\r\n                                                  case\"capitalisation\":\r\n                                                  case\"capitalization.\":\r\n                                                  case\"capitalisation.\":\r\n                                                       let index;\r\n                                                       for(let i = 0; i < capIsSpecial.length; i++){\r\n                                                            if(capIsSpecial[i].name === decreeArray[0]){\r\n                                                                 index = i;\r\n                                                            }\r\n                                                       }\r\n                                                       if(index){\r\n                                                            let value = `${capitalize(decreeArray[0])} already has special capitalization. Were you attempting to remove a special capitalization scheme for ${capitalize(decreeArray[0])}?`;\r\n                                                            setRoyalDecrees([...royalDecrees,\r\n                                                                 {\r\n                                                                      \"text\":value\r\n                                                                 }]);\r\n                                                       } else {\r\n                                                            let value = `${capitalize(orignalDecree[0])}'s new capitalization scheme has been set.`;\r\n                                                            setRoyalDecrees([...royalDecrees,\r\n                                                                 {\r\n                                                                      \"text\":value\r\n                                                                 }]);\r\n                                                            setCapSpecial([...capIsSpecial,\r\n                                                                 {\r\n                                                                      \"name\":decreeArray[0],\r\n                                                                      \"cap\":orignalDecree[0]\r\n                                                                 }]);\r\n                                                       }\r\n                                                       break;\r\n                                                  default:\r\n                                                  }\r\n                                             break;\r\n                                        case\"not\":\r\n                                             switch(decreeArray[3]){\r\n                                                  case\"special\":\r\n                                                       switch(decreeArray[4]){\r\n                                                            case\"capitalization\":\r\n                                                            case\"capitalisation\":\r\n                                                            case\"capitalization.\":\r\n                                                            case\"capitalisation.\":\r\n                                                                 let index;\r\n                                                                 for(let i = 0; i < capIsSpecial.length; i++){\r\n                                                                      if(capIsSpecial[i].name === decreeArray[0]){\r\n                                                                           index = i;\r\n                                                                      }\r\n                                                                 }\r\n                                                                 if(index){\r\n                                                                      capIsSpecial.splice(index);\r\n                                                                      let value = `${capitalize(decreeArray[0])} has not special capitalization.`;\r\n                                                                      setRoyalDecrees([...royalDecrees,\r\n                                                                           {\r\n                                                                                \"text\":value\r\n                                                                           }]);\r\n                                                                 } else {\r\n                                                                      let value = `${capitalize(decreeArray[0])} has not special capitalization. Were you attempting to set a special capitalization scheme for ${capitalize(decreeArray[0])}?`;\r\n                                                                      setRoyalDecrees([...royalDecrees,\r\n                                                                           {\r\n                                                                                \"text\":value\r\n                                                                           }\r\n                                                                      ]);\r\n                                                                 }\r\n                                                                 break;\r\n                                                            default:\r\n                                                                 spellFailed();          \r\n                                                       }\r\n                                                       break;\r\n                                                  default:\r\n                                                       spellFailed();\r\n                                                  }\r\n                                             break;\r\n                                        default:\r\n                                             spellFailed();\r\n                                   }\r\n                                   break;\r\n                              default:\r\n                                   spellFailed();\r\n                         }\r\n                    } else {\r\n                         spellFailed(\"\");\r\n                    }\r\n          }\r\n          // saveData(royalDecrees[royalDecrees.length]);\r\n          decreeRef.current.value = \"\";\r\n     };\r\n     \r\n     return(\r\n          <div className=\"table\">\r\n               <div className=\"scroll-container table\">\r\n                    <h1 className=\"scroll-heading\">Decree Scroll</h1>\r\n                    <div className=\"decree-scroll\">\r\n                         {royalDecrees ? royalDecrees.map((decree, index)=>{\r\n                         if(index >= royalDecrees.length-30)\r\n                              return(\r\n                                   <div key={index}>\r\n                                        <p className=\"text-align-left\">{decree.text}</p>\r\n                                        {decree.value ? decree.value.map((value)=>{\r\n                                             return(\r\n                                                  <div>\r\n                                                       {value}\r\n                                                  </div>\r\n                                             );\r\n                                        }) : <p></p>}\r\n                                   </div>\r\n                              )\r\n                              else return null;\r\n                         }): <div></div>}\r\n                    </div>\r\n                    <form onSubmit={submitDecree}>\r\n                         <input className=\"col-12 decree-box\" name=\"DecreeBox\" ref={decreeRef} />\r\n                    </form>\r\n               </div>\r\n          </div>\r\n     );\r\n}\r\n\r\nexport default RenderDungeon;","import React, {useEffect, useRef, useState} from \"react\";\r\nimport RenderPlayer from \"./playerContainer\";\r\nimport RenderDungeon from \"./DmGamePage\";\r\nimport api from \"../utils/api\";\r\n// import {useAuth0} from \"@auth0/auth0-react\";\r\n\r\nfunction Game(stfNthngs){\r\n     const screenNameBox = useRef();\r\n     function changeScreenName(e){\r\n          e.preventDefault();\r\n          api.setScreenName(stfNthngs.userId, {\r\n               screenName: screenNameBox.current.value\r\n          }).then(res=>{\r\n               // console.log(res);\r\n               screenNameBox.current.value = \"\";\r\n          });\r\n     }\r\n     return(\r\n          <div >\r\n               <div >\r\n                    {stfNthngs.isDM ? <RenderDungeon userId={stfNthngs.userId}  userObj={stfNthngs.userObj}className=\"parchment\"/> : <RenderPlayer className=\"parchment\"/>}\r\n                    <form onSubmit={changeScreenName}>\r\n                         <label htmlFor=\"usernameupdate\">Change screenname here:</label>\r\n                         <input className=\"col-4 decree-box\" name=\"usernameupdate\" ref={screenNameBox} />\r\n                    </form>\r\n               </div>\r\n          </div>\r\n     );\r\n}\r\n\r\nexport default Game;","import React from \"react\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\n\r\nconst LoginButton = ()=>{\r\n     const {loginWithRedirect} = useAuth0();\r\n     return <button style={{height:71}} onClick={()=>loginWithRedirect()} className=\"scroll top\" >Log in</button>;\r\n}\r\n\r\nexport default LoginButton;","import React from \"react\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\n\r\nconst LoginButton = ()=>{\r\n     const {logout} = useAuth0();\r\n     return <button style={{height:71}} className=\"scroll top\" onClick={()=>logout({returnTo:window.location.origin})} >Log out</button>;\r\n}\r\n\r\nexport default LoginButton;","import React from \"react\";\r\n\r\nfunction Header(stfNthngs){\r\n     return(\r\n          <div>\r\n               {stfNthngs.children}\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default Header;","import React, {useEffect, useRef, useState} from \"react\";\nimport RenderPlayer from \"./pages/playerContainer\";\nimport RenderDungeon from \"./pages/DmGamePage\";\nimport {useAuth0} from \"@auth0/auth0-react\";\n// import LogIn from \"./pages/logIn\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Game from \"./pages/game\";\nimport LoginButton from \"./Components/loginButton\";\nimport LogoutButton from \"./Components/logoutButton\";\nimport Header from \"./Components/Header\";\nimport API from \"./utils/api\";\n\nfunction App() {\n  const {user, isAuthenticated} = useAuth0();\n  const [account, setAccount] = useState([]);\n  const [username, logIn] = useState(\"\");\n  const [isDM, changeDM] = useState(true);\n  const logo = \"https://www.underconsideration.com/brandnew/archives/dungeons_and_dragons_40_ampersand_detail_black.jpg\";\n  useEffect(() => {\n    if(user){\n      logIn(user.nickname);\n      API.getUser({\n        id: user.sub\n      }).then(result=>{\n        console.log(result);\n        setAccount(result.data);\n        logIn(result.data[0].screenName);\n        console.log(result.data[0].screenName);\n        console.log(JSON.stringify(account));\n        if(JSON.stringify(result.data) === \"[]\"){\n          API.newUser({\n            screenName: user.nickname,\n            id: user.sub\n          }).then(result=>{\n            setAccount(result.data);\n            logIn(result.data.screenName);\n            console.log(`newUser .then working: ${account}`);\n          }).catch(err=>console.log(err));\n        }\n      }).catch((err)=>{\n        console.log(err);\n        API.newUser({\n          screenName: user.nickname,\n          id: user.sub\n        }).then(result=>{\n          setAccount(result.data);\n          logIn(result.data.screenName);\n          console.log(`newUser .then working: ${account}`);\n        }).catch(err=>console.log(err));\n      });\n\n    } else {\n      logIn(\"\");\n    }\n  }, [isAuthenticated])\n\n\n  return (\n    <div className=\"App table\">\n      <Header className=\"table\">\n        <img className=\"top\" src={logo}  alt=\"logo\" height={75}/>\n        {isAuthenticated ? <LogoutButton className=\"scroll\" />: <LoginButton className=\"scroll\"/>}\n        <p>{username}</p>\n      </Header>\n      {isAuthenticated ? <Game isDM={isDM} userId={user.sub} user={user} />: <p></p>}\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Auth0Provider} from \"@auth0/auth0-react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain=\"dungeons-and-dragons.us.auth0.com\"\n      clientId=\"1jJeX74sLijeoVcDiPaRQD8wBEoGyIBr\"\n      redirectUri={window.location.origin}\n    >\n      <App />\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}